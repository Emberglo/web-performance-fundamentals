Improving First Contentful Paint

    servers need to be quick

        needs to be sized correctly

            make sure your machine has plenty of memory, etc to handle requests
        
        minimal processing

            don't make unnecessary database requests or data manipulation

        network bandwidth

            have more than enough bandwidth to process all expected requests and some extra

    deliver small documents

        content size

            anything over 80-100k per page is too much

            images should be 1mb or less

        compression

            turn on gzip compression

            can use newer compressions like brotli
    
    short route through internet/network

        make sure to place your servers as close to your users as possible

            east coast servers to west coast customers - at least 200ms per request

        use content distrobution networks (CDNs)

            like cloudflare, maxCDN, etc

            caches a copy of your site and serves that to users requesting it


Improving Largest Contentful Paint

    Defer Resources Until Later

        lazy loading of images taht aren't necessary to main content

            add loading="lazy" to img tags

                doesn't work in safari / in ios

                build a lazy loader with JS instead

        don't load unnecessary javascript or css files

        add async on script tags to allow the browser to do it later - doesn't really work too well

        add defer on script tags - allows file to load but doesn't execute until after the load event - won't block other things from loading

        change the order things happen in HTML

            move analytics or enhancement scripts to the end of the document

    Optimize Images

        use srcset to require smaller images depending on screen size rules as specified in the sizes tag

            <img src="picture-1200.jpg" srcset="picture-600.jpg 600w, picture-900.jpg 900w, picture-1200.jpg 1200w" sizes="(max-width: 600px) 600px, (max-width: 900px) 900px, 1200px />

    Reduce Request Overhead

        implement HTTP2

            supported on many webservers like ngnx and apache

            can reuse connections - don't have to do a TCP connection or SSL handshake for every request

            requires local ssl certificate - difficult to set up

        cache requests

            request headers can specify how long to hold on to the response of a request

                cache-control, expires, etag - options to turn on in requests

        preloading

            can preload certain requests like fonts and css imports

            we can tell the browser to get it right away

            preconnect and preload

                <link rel="preconnect" href="google font link here" />

                <link rel="preload" href="link to dependency - /icons.css" />


Improving Cumulative Layout Shift

    delaying things to improve largest contentful paint often makes cumulative layout shift worse

    layout shift prior to lcp is ok, but after is frustrating for users

    specify the size of boxes before load so the browser plans for them

    cls continues increasing after page load due to lazy loading of images

        adding size/height/width will help reduce this

    
Improving First Input Delay

    moving too much stuff after largest contentful paint make browser seem laggy - frustrating

    if this is an issue - you're probably pushing too much javascript/content for the value you're providing to your users


Sell these improvements by emphasising improvement in session time and falling bounce rates